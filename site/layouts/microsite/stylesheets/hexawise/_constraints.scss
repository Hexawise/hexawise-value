#constraints-panel {
  display: flex;
  flex-flow: column nowrap;

  box-sizing: border-box !important;
  -webkit-box-sizing: border-box !important;
  -moz-box-sizing: border-box !important;
  *,
  *:before,
  *:after {
    box-sizing: border-box !important;
    -webkit-box-sizing: border-box !important;
    -moz-box-sizing: border-box !important;
  }

  #constraints-body {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    margin: 0;
    flex-grow: 1;
    overflow-y: auto;

    // React Value Pair List
    div#value-pair-container {
      flex-grow: 1;
      width: 20%;
    
      div#invalid_pair_hint {
        width: 220px;
        padding: 15px 0px 0px 15px;
        overflow: hidden;
      
        p {
          padding: 5px 10px 5px 10px;
          line-height: 15px;
        }
      
        img {
          vertical-align: middle;
        }
      }
    
      div#value-pair-list {
        display: -ms-grid;
        display: grid;
        -ms-grid-columns: 1fr;
        grid-template-columns: 1fr;
        -ms-grid-rows: -webkit-min-content -webkit-min-content 1fr;
        -ms-grid-rows: min-content min-content 1fr;
        grid-template-rows: -webkit-min-content -webkit-min-content 1fr;
        grid-template-rows: min-content min-content 1fr;
        grid-template-areas: "UserConstraints" "AdvancedConstraints" "ImpliedConstraints";

        height: 100%;

        div.constraints-container {
          &#user-constraints-container {
            -ms-grid-row: 1;
            -ms-grid-column: 1;
            grid-area: UserConstraints;
          }

          &#implied-constraints-container {
            -ms-grid-row: 3;
            -ms-grid-column: 1;
            grid-area: ImpliedConstraints;
          }

          &#advanced-constraints-container {
            -ms-grid-row: 2;
            -ms-grid-column: 1;
            grid-area: AdvancedConstraints;

            padding: 5px 0 0;

            &:not(.collapsed) {
              min-height: 50px;
            }

            .constraints-list-virtualized {
              height: 31vh !important;
            }

            #advanced-constraints-list {
              padding: 5px 5px;
            }
          }

          .constraints-list-virtualized {
            width: 100% !important;
            overflow-y: auto !important;

            .constraints-list {
              overflow-y: auto;
              display: -ms-grid;
              display: grid;
              -ms-grid-columns: 1fr;
              grid-template-columns: 1fr;
              -ms-grid-rows: 1fr;
              grid-template-rows: 1fr;
              gap: 1px 1px;
              grid-template-areas: "constraintPair";

              .constraint-pair {
                display:-ms-grid;
                display: grid;
                -ms-grid-columns: 49px 3px minmax(50px, 1fr) 3px 22px 3px minmax(50px, 1fr) 3px 24px;
                grid-template-columns: 49px minmax(50px, 1fr) 22px minmax(50px, 1fr) 24px;
                -ms-grid-rows: 1fr 7px 1fr;
                grid-template-rows: 1fr 1fr;
                gap: 7px 3px;
                grid-template-areas: "keywordTop parameterNameTop operatorTop constraintTypeTop actions" "keywordBottom parameterNameBottom operatorBottom constraintTypeBottom .";
                grid-area: constraintPair;
                -ms-grid-row:1;
                -ms-grid-column:1;
                padding: 7px 0;

                .keywordTop {
                  grid-area: keywordTop;
                  -ms-grid-row:1;
                  -ms-grid-column:1; 
                }

                .keywordBottom {
                  grid-area: keywordBottom;
                  -ms-grid-row:3;
                  -ms-grid-column:1; 
                }

                .parameterNameTop {
                  grid-area: parameterNameTop;
                  -ms-grid-row:1;
                  -ms-grid-column:3;
                }

                .parameterNameBottom {
                  grid-area: parameterNameBottom;
                  -ms-grid-row:3;
                  -ms-grid-column:3;
                }

                .operatorTop {
                  grid-area: operatorTop;
                  -ms-grid-row:1;
                  -ms-grid-column:5;
                }

                .operatorBottom {
                  grid-area: operatorBottom;
                  -ms-grid-row:3;
                  -ms-grid-column:5;
                }

                .constraintTypeTop {
                  grid-area: constraintTypeTop;
                  -ms-grid-row:1;
                  -ms-grid-column:7;
                }

                .constraintTypeBottom {
                  grid-area: constraintTypeBottom;
                  -ms-grid-row:3;
                  -ms-grid-column:7;
                }

                .actions {
                  grid-area: actions;
                  -ms-grid-row:1;
                  -ms-grid-column:9;
                  text-align: center;
                }

                .invalidValue, .boundValue {
                  text-align: left;
                }

                .keyword, .operator {
                  text-align: center;
                }

                .parameterName, .invalidValue, .boundValue {
                  font-weight: bold;
                  white-space: nowrap;
                  text-overflow: ellipsis;
                  overflow: hidden;
                }

                .parameterName {
                  text-align: right;
                }

                i {
                  color: #fff;
                  cursor: pointer;
                }

                &.bound-pair-onmouseover {
                  background-color: $hex_green;
                }
      
                &.invalid-pair-onmouseover {
                  background-color: $hex_red;
                }

                &.invalid-pair-onmouseover,
                &.bound-pair-onmouseover,
                &.invalid-pair-onmouseover .invalidValue,
                &.bound-pair-onmouseover .boundValue  {
                  color: white !important;
                }

                .invalidValue {
                  color: $hex_red;
                }

                .boundValue {
                  color: $hex_green;
                }
              }
            }
          }

          .constraints-header {
            height: 20px;
            cursor: pointer;
            padding-left: 5px;
            padding-top: 3.5px;
          }

          .constraints-list-explanation {
            margin-left: 3px;
          }
        }
      }
    }

    // React Constraints Table
    #constraints-parameter-list {
      width: calc(80% - 40px);
      overflow: auto;

      #loading-indicator {
        font-size: 3em;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
      }

      div.table-container {
        table.slickList.parameters {
          border-top: 2px solid $hex_purple;

          td.pv-cell {
            &.invalid-pair-hover {
              background-color: $hex_red;
            }

            &.bound-pair-hover {
              background-color: $hex_green;
            }

            &.invalid-pair-hover, &.bound-pair-hover {
              color: white;

              .valuePairLinkCell {
                i {
                  color: white;
                }

                .badge {
                  background-color: white !important;
                }

                .invalid-pair-icon .badge {
                  color: $hex_red !important;
                }

                .bound-pair-icon .badge {
                  color: $hex_green !important;
                }
              }           
            }

            div.parameterValueTable {
              align-items: center;
              display: flex;
              flex-flow: row nowrap;
              height: 36px;
              justify-content: space-between;
  
              div.valuePairLinkCell {
                .invalid-pair-icon,
                .bound-pair-icon {
                  position: relative;
      
                  a {
                    text-decoration: none;
                    i {
                      font-size: 20px;
                    }
                  }
      
                  .badge {
                    color: #fff;
                    font-size: 10px;
                    padding: 1.5px;                    
                    position: absolute;
                    right: -8px;
                    top: -5px;
                    z-index: 0;
                  }
      
                  &.read-only a {
                    cursor: text;
                  }
                }
      
                .invalid-pair-icon {
                  .badge {
                    background-color: $hex_red;
                  }
                }
      
                .bound-pair-icon {
                  .badge {
                    background-color: $hex_green;
                  }
                }
              }
            }
          }
        }
      }

      .no-parameter-message-container {
        padding-top: 15px;
      }
    }

    .auto-generated {
      opacity: 0.5;
    
      b {
        color: white;
      }
    }
  }
}

// React Value Pair "Checking for Invalid Pairs" message
#checking-vps-for-ip-msg {
  margin: 5px auto;
}